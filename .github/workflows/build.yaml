name: Build

on:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".github/workflows/trigger.yaml"
      - ".github/workflows/deploy-hub.yaml"
  release:
    types: [created, published]
  workflow_dispatch:

jobs:
  process-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # 下载焊入html的i18n
      - name: Download game files (zip)
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "DoL-Lyra/DoLModLoaderBuild"
          latest: true
          fileName: "DoL-ModLoader-*.zip"

      # 下载汉化仓库的apk
      - name: Download game files (apk)
        uses: robinraju/release-downloader@v1.8
        with:
          repository: "Eltirosto/Degrees-of-Lewdity-Chinese-Localization"
          latest: true
          fileName: "DoL-ModLoader-*-v*[^polyfill].apk"

      # 修改内容
      - name: Modify ZIP&APK
        run: |
          mkdir ${{ github.workspace }}/output
          mkdir modify_tmp
          # 解压apk
          unzip -q *.apk -d modify_tmp/apk

          ver=( 0 4 8 12 )
          for v in "${ver[@]}"
          do
            dol_basename=$(basename DoL*[^polyfill]-${v}.zip .zip)
            unzip -q ${dol_basename}.zip -d modify_tmp/zip
            # 将zip的img覆盖到apk中
            cp -r "modify_tmp/zip/img" "modify_tmp/apk/assets/www/"
            # 将zip的html覆盖到apk中
            cp "modify_tmp/zip/Degrees of Lewdity.html" "modify_tmp/apk/assets/www/"
            # 打包
            pushd modify_tmp/zip
            zip -q -r ${dol_basename}.zip *
            mv ${dol_basename}.zip ${{ github.workspace }}/output/
            popd
            pushd modify_tmp/apk
            zip -q -r ${dol_basename}.apk *
            mv ${dol_basename}.apk ${{ github.workspace }}/output/
            popd
            rm -rf modify_tmp/zip
          done

          # polyfill
          dol_basename=$(basename DoL*polyfill-12.zip .zip)
          unzip -q ${dol_basename}.zip -d modify_tmp/zip
          # 将zip的img覆盖到apk中
          cp -r "modify_tmp/zip/img" "modify_tmp/apk/assets/www/"
          # 将zip的html覆盖到apk中
          cp "modify_tmp/zip/Degrees of Lewdity.html" "modify_tmp/apk/assets/www/"
          # 打包
          pushd modify_tmp/zip
          zip -q -r ${dol_basename}.zip *
          mv ${dol_basename}.zip ${{ github.workspace }}/output/
          popd
          pushd modify_tmp/apk
          zip -q -r ${dol_basename}.apk *
          mv ${dol_basename}.apk ${{ github.workspace }}/output/
          popd
          rm -rf modify_tmp/zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gamefile-zip
          path: ${{ github.workspace }}/output/*.zip
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gamefile-apk
          path: ${{ github.workspace }}/output/*.apk

  build-matrix:
    needs: process-package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        pack: [zip, apk]
        code:
          [
            3,
            11,
            12,
            15,
            19,
            27,
            31,
            35,
            47,
            67,
            79,
            83,
            91,
            95,
            99,
            111,
            polyfill-31,
          ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "8"

      - name: Install APT packages
        run: sudo apt install -y unrar

      # 下载处理过的游戏文件
      - uses: actions/download-artifact@v4
        with:
          name: gamefile-${{ matrix.pack }}
          path: ${{ github.workspace }}

      - name: Run mod script
        run: |
          echo ${{ secrets.SIGNING_KEY }} > dol.base64
          base64 -d dol.base64 > dol.jks
          ./mod.sh ${{ matrix.pack }} ${{ matrix.code }} ${{ github.ref_name }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dol-${{ matrix.pack }}-${{ matrix.code }}
          path: output/*
      - name: Upload artifacts pairs
        uses: actions/upload-artifact@v4
        with:
          name: pair-${{ matrix.pack }}-${{ matrix.code }}
          path: pairs/*

  release:
    runs-on: ubuntu-latest
    needs: build-matrix
    if: github.ref_type == 'tag'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: dol-*
          path: outputs
          merge-multiple: true

      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: outputs/{*.zip,*.apk}
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          make_latest: true
          # prerelease: true
          release_name: ${{ github.ref_name }}
          # body: |
          #   ${{ steps.gen_release_note.outputs.RELEASE_BODY }}

  call-deploy:
    uses: ./.github/workflows/deploy.yaml
    needs: release
    if: github.ref_type == 'tag'
    secrets: inherit

  call-deploy-hub:
    uses: ./.github/workflows/deploy-hub.yaml
    needs: release
    if: github.ref_type == 'tag'
    secrets: inherit

