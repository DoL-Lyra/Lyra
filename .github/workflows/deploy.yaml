name: Build and Deploy

on:
  release:
    types: [released]
  workflow_dispatch:

env:
  RELEASE_ARTIFACT_NAME: dol-release-package
  RELEASE_ARTIFACT_PATH: ./dol-release.zip
  RELEASE_FOLDER_PATH: ./dol-release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: getRelease
        name: release-downloader
        uses: robinraju/release-downloader@v1.8
        with:
          latest: true
          fileName: "dol-chs-*-beautify-cheat-hp-avatarbj-*.zip"
      - name: Extract downloaded file
        run: |
          echo "Downloaded Chinese version DOL: ${{ steps.getRelease.outputs.tag_name }}"
          unzip -q ${{ fromJson(steps.getRelease.outputs.downloaded_files)[0] }} -d ${{ env.RELEASE_FOLDER_PATH }}
      - name: Construct PWA
        run: |
          cp -r .github/pwa/* ${{ env.RELEASE_FOLDER_PATH }}
          mv "${{ env.RELEASE_FOLDER_PATH }}/Degrees of Lewdity.html" ${{ env.RELEASE_FOLDER_PATH }}/index.html
      - name: Modify HTML
        shell: python3 {0}
        run: |
          with open("${{ env.RELEASE_FOLDER_PATH }}/index.html", "r+", encoding="utf-8") as index_html_file:
            index_html = index_html_file.read()
            insert_index = index_html.find("<head>") + 7
            index_html = index_html[:insert_index] + \
                "<link rel=\"manifest\" href=\"manifest.json\">\n" + index_html[insert_index:]
            insert_index = index_html.find("<body>") + 7
            index_html = index_html[:insert_index] + \
                "    <script>\n" + \
                "        if (typeof navigator.serviceWorker !== 'undefined') {\n" + \
                "            navigator.serviceWorker.register('sw.js')\n" + \
                "        }\n" + \
                "    </script>\n" + index_html[insert_index:]
            index_html_file.seek(0)
            index_html_file.truncate()
            index_html_file.write(index_html)
      - name: Pack release artifact
        run: |
          7z a ${{ env.RELEASE_ARTIFACT_PATH }} ${{ env.RELEASE_FOLDER_PATH }}/*
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
          path: ${{ env.RELEASE_ARTIFACT_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
      - name: Unzip release artifact
        run: |
          unzip -q ${{ env.RELEASE_ARTIFACT_PATH }} -d ${{ env.RELEASE_FOLDER_PATH }}
      - name: Deploy to Netlify Pages
        uses: crazy-max/ghaction-github-pages@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          build_dir: ${{ env.RELEASE_FOLDER_PATH }}
          keep_history: false
          target_branch: pages

  post-build:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build, deploy]
    steps:
      - name: Cleanup
        uses: geekyeggo/delete-artifact@v2
        with:
          name: ${{ env.RELEASE_ARTIFACT_NAME }}
